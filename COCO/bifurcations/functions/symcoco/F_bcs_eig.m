function varargout=F_bcs_eig(action,varargin)
%% Automatically generated with matlabFunction
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'nargs'
   varargout{1}=1;
   return
  case 'nout'
   varargout{1}=4;
   return
  case 'argrange'
   varargout{1}=struct('u',1:11);
   return
  case 'argsize'
   varargout{1}=struct('u',11);
   return
  case 'vector'
   varargout{1}=struct('u',1);
   return
  case 'extension'
   varargout{1}='rhs';
   return
  case 'maxorder'
   varargout{1}=2;
   return
end
nout=4;
order=varargin{1};
f=str2func(sprintf('F_bcs_eig_%s_%d',action,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{2:end});
end



function [out1,out2,out3,out4] = F_bcs_eig_rhs_0(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22)
%F_bcs_eig_rhs_0
%    [OUT1,OUT2,OUT3,OUT4] = F_bcs_eig_rhs_0(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    09-Sep-2024 11:57:34

t2 = -in1;
out1 = -in8.*in11+in4.*in10.*t2-in4.*in8.*(in3+1.0);
if nargout > 1
    out2 = -in9.*in11-in4.*in9.*(in3.*in7+1.0)-in2.*in4.*in7.*in10;
end
if nargout > 2
    out3 = -in10.*(in2+t2+1.0)+in3.*in8-in3.*in9-in10.*in11;
end
if nargout > 3
    out4 = in8.*conj(in8)+in9.*conj(in9)+in10.*conj(in10)-1.0;
end
end


function [out1,out2,out3,out4] = F_bcs_eig_rhs_1(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22)
%F_bcs_eig_rhs_1
%    [OUT1,OUT2,OUT3,OUT4] = F_bcs_eig_rhs_1(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    09-Sep-2024 11:57:34

t2 = in3.*in7;
t3 = in3+1.0;
out1 = -in8.*in22-in11.*in19-in1.*in4.*in21-in1.*in10.*in15-in4.*in8.*in14-in4.*in10.*in12-in4.*in19.*t3-in8.*in15.*t3;
if nargout > 1
    t4 = t2+1.0;
    out2 = -in9.*in22-in11.*in20-in4.*in20.*t4-in9.*in15.*t4-in4.*in9.*(in3.*in18+in7.*in14)-in2.*in4.*in7.*in21-in2.*in4.*in10.*in18-in2.*in7.*in10.*in15-in4.*in7.*in10.*in13;
end
if nargout > 2
    out3 = in3.*in19+in8.*in14-in3.*in20-in9.*in14-in10.*in22-in11.*in21-in21.*(-in1+in2+1.0)+in10.*(in12-in13);
end
if nargout > 3
    out4 = in8.*conj(in19)+in19.*conj(in8)+in9.*conj(in20)+in20.*conj(in9)+in10.*conj(in21)+in21.*conj(in10);
end
end


function [out1,out2,out3,out4] = F_bcs_eig_rhs_2(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22)
%F_bcs_eig_rhs_2
%    [OUT1,OUT2,OUT3,OUT4] = F_bcs_eig_rhs_2(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    09-Sep-2024 11:57:35

out1 = in19.*in22.*-2.0-in1.*in15.*in21.*2.0-in4.*in12.*in21.*2.0-in4.*in14.*in19.*2.0-in8.*in14.*in15.*2.0-in10.*in12.*in15.*2.0-in15.*in19.*(in3+1.0).*2.0;
if nargout > 1
    t2 = in3.*in18;
    t3 = in7.*in14;
    t4 = t2+t3;
    out2 = in20.*in22.*-2.0-in4.*in20.*t4.*2.0-in9.*in15.*t4.*2.0-in15.*in20.*(in3.*in7+1.0).*2.0-in2.*in4.*in18.*in21.*2.0-in2.*in7.*in15.*in21.*2.0-in2.*in10.*in15.*in18.*2.0-in4.*in7.*in13.*in21.*2.0-in4.*in9.*in14.*in18.*2.0-in4.*in10.*in13.*in18.*2.0-in7.*in10.*in13.*in15.*2.0;
end
if nargout > 2
    out3 = in14.*in19.*2.0-in14.*in20.*2.0-in21.*in22.*2.0+in21.*(in12-in13).*2.0;
end
if nargout > 3
    out4 = in19.*conj(in19).*2.0+in20.*conj(in20).*2.0+in21.*conj(in21).*2.0;
end
end

