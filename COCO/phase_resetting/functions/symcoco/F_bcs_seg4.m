function varargout=F_bcs_seg4(action,varargin)
%% Automatically generated with matlabFunction
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'nargs'
   varargout{1}=1;
   return
  case 'nout'
   varargout{1}=5;
   return
  case 'argrange'
   varargout{1}=struct('u',1:28);
   return
  case 'argsize'
   varargout{1}=struct('u',28);
   return
  case 'vector'
   varargout{1}=struct('u',1);
   return
  case 'extension'
   varargout{1}='rhs';
   return
  case 'maxorder'
   varargout{1}=2;
   return
end
nout=5;
order=varargin{1};
f=str2func(sprintf('F_bcs_seg4_%s_%d',action,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{2:end});
end



function [out1,out2,out3,out4,out5] = F_bcs_seg4_rhs_0(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56)
%F_bcs_seg4_rhs_0
%    [OUT1,OUT2,OUT3,OUT4,OUT5] = F_bcs_seg4_rhs_0(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    10-Jul-2024 16:03:22

out1 = -in7+in10-in28.*cos(in26);
if nargout > 1
    out2 = -in8+in11;
end
if nargout > 2
    out3 = -in9+in12-in28.*sin(in26);
end
if nargout > 3
    out4 = -in4.*(conj(in1)-conj(in13))-in5.*(conj(in2)-conj(in14))-in6.*(conj(in3)-conj(in15));
end
if nargout > 4
    out5 = -in23+(in1-in13).^2+(in2-in14).^2+(in3-in15).^2;
end
end


function [out1,out2,out3,out4,out5] = F_bcs_seg4_rhs_1(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56)
%F_bcs_seg4_rhs_1
%    [OUT1,OUT2,OUT3,OUT4,OUT5] = F_bcs_seg4_rhs_1(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    10-Jul-2024 16:03:22

t2 = cos(in26);
t3 = sin(in26);
out1 = -in35+in38-in56.*t2+in28.*in54.*t3;
if nargout > 1
    out2 = -in36+in39;
end
if nargout > 2
    out3 = -in37+in40-in56.*t3-in28.*in54.*t2;
end
if nargout > 3
    out4 = -in32.*(conj(in1)-conj(in13))-in33.*(conj(in2)-conj(in14))-in34.*(conj(in3)-conj(in15))-in4.*(conj(in29)-conj(in41))-in5.*(conj(in30)-conj(in42))-in6.*(conj(in31)-conj(in43));
end
if nargout > 4
    out5 = -in51+(in1-in13).*(in29-in41).*2.0+(in2-in14).*(in30-in42).*2.0+(in3-in15).*(in31-in43).*2.0;
end
end


function [out1,out2,out3,out4,out5] = F_bcs_seg4_rhs_2(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56)
%F_bcs_seg4_rhs_2
%    [OUT1,OUT2,OUT3,OUT4,OUT5] = F_bcs_seg4_rhs_2(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    10-Jul-2024 16:03:23

t2 = cos(in26);
t3 = sin(in26);
t4 = in54.^2;
out1 = in54.*in56.*t3.*2.0+in28.*t2.*t4;
if nargout > 1
    out2 = 0.0;
end
if nargout > 2
    out3 = in54.*in56.*t2.*-2.0+in28.*t3.*t4;
end
if nargout > 3
    out4 = in32.*(conj(in29)-conj(in41)).*-2.0-in33.*(conj(in30)-conj(in42)).*2.0-in34.*(conj(in31)-conj(in43)).*2.0;
end
if nargout > 4
    out5 = (in29-in41).^2.*2.0+(in30-in42).^2.*2.0+(in31-in43).^2.*2.0;
end
end

