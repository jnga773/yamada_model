function varargout=F_bcs_seg1_seg2(action,varargin)
%% Automatically generated with matlabFunction
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'nargs'
   varargout{1}=1;
   return
  case 'nout'
   varargout{1}=14;
   return
  case 'argrange'
   varargout{1}=struct('u',1:37);
   return
  case 'argsize'
   varargout{1}=struct('u',37);
   return
  case 'vector'
   varargout{1}=struct('u',1);
   return
  case 'extension'
   varargout{1}='rhs';
   return
  case 'maxorder'
   varargout{1}=2;
   return
end
nout=14;
order=varargin{1};
f=str2func(sprintf('F_bcs_seg1_seg2_%s_%d',action,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{2:end});
end



function [out1,out2,out3,out4,out5,out6,out7,out8,out9,out10,out11,out12,out13,out14] = F_bcs_seg1_seg2_rhs_0(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56,in57,in58,in59,in60,in61,in62,in63,in64,in65,in66,in67,in68,in69,in70,in71,in72,in73,in74)
%F_bcs_seg1_seg2_rhs_0
%    [OUT1,OUT2,OUT3,OUT4,OUT5,OUT6,OUT7,OUT8,OUT9,OUT10,OUT11,OUT12,OUT13,OUT14] = F_bcs_seg1_seg2_rhs_0(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56,IN57,IN58,IN59,IN60,IN61,IN62,IN63,IN64,IN65,IN66,IN67,IN68,IN69,IN70,IN71,IN72,IN73,IN74)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
<<<<<<< HEAD
%    31-May-2024 11:27:24
=======
%    30-May-2024 11:51:47
>>>>>>> 416101a283974f796720c9b471e1b1a3b830dd32

out1 = in1-in19;
if nargout > 1
    out2 = in2-in20;
end
if nargout > 2
    out3 = in3-in21;
end
if nargout > 3
    out4 = -in7+in13;
end
if nargout > 4
    out5 = -in8+in14;
end
if nargout > 5
    out6 = -in9+in15;
end
if nargout > 6
    out7 = -in25.*(in1-in26+in1.*in3);
end
if nargout > 7
    out8 = in4-in22;
end
if nargout > 8
    out9 = in5-in23;
end
if nargout > 9
    out10 = in6-in24;
end
if nargout > 10
    out11 = -in16+in10.*in31;
end
if nargout > 11
    out12 = -in17+in11.*in31;
end
if nargout > 12
    out13 = -in18+in12.*in31;
end
if nargout > 13
    out14 = sqrt(abs(in10).^2+abs(in11).^2+abs(in12).^2)-1.0;
end
end


function [out1,out2,out3,out4,out5,out6,out7,out8,out9,out10,out11,out12,out13,out14] = F_bcs_seg1_seg2_rhs_1(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56,in57,in58,in59,in60,in61,in62,in63,in64,in65,in66,in67,in68,in69,in70,in71,in72,in73,in74)
%F_bcs_seg1_seg2_rhs_1
%    [OUT1,OUT2,OUT3,OUT4,OUT5,OUT6,OUT7,OUT8,OUT9,OUT10,OUT11,OUT12,OUT13,OUT14] = F_bcs_seg1_seg2_rhs_1(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56,IN57,IN58,IN59,IN60,IN61,IN62,IN63,IN64,IN65,IN66,IN67,IN68,IN69,IN70,IN71,IN72,IN73,IN74)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
<<<<<<< HEAD
%    31-May-2024 11:27:24
=======
%    30-May-2024 11:51:48
>>>>>>> 416101a283974f796720c9b471e1b1a3b830dd32

out1 = in38-in56;
if nargout > 1
    out2 = in39-in57;
end
if nargout > 2
    out3 = in40-in58;
end
if nargout > 3
    out4 = -in44+in50;
end
if nargout > 4
    out5 = -in45+in51;
end
if nargout > 5
    out6 = -in46+in52;
end
if nargout > 6
    out7 = -in62.*(in1-in26+in1.*in3)-in25.*(in38-in63+in1.*in40+in3.*in38);
end
if nargout > 7
    out8 = in41-in59;
end
if nargout > 8
    out9 = in42-in60;
end
if nargout > 9
    out10 = in43-in61;
end
if nargout > 10
    out11 = -in53+in10.*in68+in31.*in47;
end
if nargout > 11
    out12 = -in54+in11.*in68+in31.*in48;
end
if nargout > 12
    out13 = -in55+in12.*in68+in31.*in49;
end
if nargout > 13
    t2 = abs(in10);
    t3 = abs(in11);
    t4 = abs(in12);
    t5 = conj(in10);
    t6 = conj(in11);
    t7 = conj(in12);
    out14 = ((t2.*(in47.*t5+in10.*conj(in47)).*1.0./sqrt(in10.*t5)+t3.*(in48.*t6+in11.*conj(in48)).*1.0./sqrt(in11.*t6)+t4.*(in49.*t7+in12.*conj(in49)).*1.0./sqrt(in12.*t7)).*1.0./sqrt(t2.^2+t3.^2+t4.^2))./2.0;
end
end


function [out1,out2,out3,out4,out5,out6,out7,out8,out9,out10,out11,out12,out13,out14] = F_bcs_seg1_seg2_rhs_2(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56,in57,in58,in59,in60,in61,in62,in63,in64,in65,in66,in67,in68,in69,in70,in71,in72,in73,in74)
%F_bcs_seg1_seg2_rhs_2
%    [OUT1,OUT2,OUT3,OUT4,OUT5,OUT6,OUT7,OUT8,OUT9,OUT10,OUT11,OUT12,OUT13,OUT14] = F_bcs_seg1_seg2_rhs_2(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56,IN57,IN58,IN59,IN60,IN61,IN62,IN63,IN64,IN65,IN66,IN67,IN68,IN69,IN70,IN71,IN72,IN73,IN74)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
<<<<<<< HEAD
%    31-May-2024 11:27:24
=======
%    30-May-2024 11:51:48
>>>>>>> 416101a283974f796720c9b471e1b1a3b830dd32

out1 = 0.0;
if nargout > 1
    out2 = 0.0;
end
if nargout > 2
    out3 = 0.0;
end
if nargout > 3
    out4 = 0.0;
end
if nargout > 4
    out5 = 0.0;
end
if nargout > 5
    out6 = 0.0;
end
if nargout > 6
    out7 = in62.*(in38-in63+in1.*in40+in3.*in38).*-2.0-in25.*in38.*in40.*2.0;
end
if nargout > 7
    out8 = 0.0;
end
if nargout > 8
    out9 = 0.0;
end
if nargout > 9
    out10 = 0.0;
end
if nargout > 10
    out11 = in47.*in68.*2.0;
end
if nargout > 11
    out12 = in48.*in68.*2.0;
end
if nargout > 12
    out13 = in49.*in68.*2.0;
end
if nargout > 13
    t2 = abs(in10);
    t3 = abs(in11);
    t4 = abs(in12);
    t5 = conj(in10);
    t6 = conj(in11);
    t7 = conj(in12);
    t8 = conj(in47);
    t9 = conj(in48);
    t10 = conj(in49);
    t11 = t2.^2;
    t12 = t3.^2;
    t13 = t4.^2;
    t14 = in10.*t5;
    t15 = in11.*t6;
    t16 = in12.*t7;
    t17 = in10.*t8;
    t18 = in47.*t5;
    t19 = in11.*t9;
    t20 = in48.*t6;
    t21 = in12.*t10;
    t22 = in49.*t7;
    t23 = t17+t18;
    t24 = t19+t20;
    t25 = t21+t22;
    t26 = 1.0./sqrt(t14);
    t27 = 1.0./sqrt(t15);
    t28 = 1.0./sqrt(t16);
    t32 = t11+t12+t13;
    t29 = t23.^2;
    t30 = t24.^2;
    t31 = t25.^2;
    out14 = 1.0./t32.^(3.0./2.0).*(t2.*t23.*t26+t3.*t24.*t27+t4.*t25.*t28).^2.*(-1.0./4.0)+(1.0./sqrt(t32).*((t26.^2.*t29)./2.0+(t27.^2.*t30)./2.0+(t28.^2.*t31)./2.0-(t2.*t26.^3.*t29)./2.0-(t3.*t27.^3.*t30)./2.0-(t4.*t28.^3.*t31)./2.0+in47.*t2.*t8.*t26.*2.0+in48.*t3.*t9.*t27.*2.0+in49.*t4.*t10.*t28.*2.0))./2.0;
end
end

